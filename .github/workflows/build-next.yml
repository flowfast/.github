name: Build and Push docker images to registers

on:
  workflow_call:
    inputs:
      APP_IMAGE_NAME:
        required: true
        type: string
      APP_IMAGE_NAME_DOCKER_HUB:
        required: true
        type: string
      NODE_OPTIONS:
        required: false
        type: string
      ISSUES_TRACKER_ENABLED:
        required: false
        type: boolean

    secrets:
      HARBOR_URL:
        required: true
      HARBOR_USER:
        required: true
      HARBOR_PASSWORD:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      DOCKER_USER:
        required: true
      DOCKER_PASSWORD:
        required: true
      SLACK_WEBHOOK:
        required: true
      ISSUES_TRACKER_AUTH_TOKEN:
        required: false

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Harbor login
        uses: docker/login-action@v3
        with:
          registry: ${{secrets.HARBOR_URL}}
          username: ${{secrets.HARBOR_USER}}
          password: ${{secrets.HARBOR_PASSWORD}}

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Setup SSH Agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          eval "$(ssh-agent -a $SSH_AUTH_SOCK > /dev/null)"
          ssh-add - <<< '${{ secrets.SSH_PRIVATE_KEY }}'

      - name: Build and Push to Harbor and Docker Hub
        uses: docker/build-push-action@v5.1.0
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock

        with:
          context: .
          ssh:
            default=${{ env.SSH_AUTH_SOCK }}
          build-args: |
            REGISTRY_URL=${{secrets.HARBOR_URL}}/
            NODE_OPTIONS=${{inputs.NODE_OPTIONS}}
            ISSUES_TRACKER_ENABLED=${{inputs.ISSUES_TRACKER_ENABLED}}
            ISSUES_TRACKER_AUTH_TOKEN=${{secrets.ISSUES_TRACKER_AUTH_TOKEN}}
          push: true
          tags: |
            ${{secrets.HARBOR_URL}}/${{inputs.APP_IMAGE_NAME}}:${{steps.package-version.outputs.current-version}}
            ${{inputs.APP_IMAGE_NAME_DOCKER_HUB}}:${{steps.package-version.outputs.current-version}}
            ${{inputs.APP_IMAGE_NAME_DOCKER_HUB}}:latest

  slack-send:
    if: ${{ always() }}
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Get results
        id: get_results
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if ${{ needs.docker-build-push.result == 'success' }}
            then echo "RESULT_EMOJI=:white_check_mark:" >> "$GITHUB_OUTPUT"
            else echo "RESULT_EMOJI=:rotating_light:" >> "$GITHUB_OUTPUT"
          fi
          echo "ACTION_URL=$(gh run --repo ${{ github.repository }} view ${{ github.run_id }} --json jobs --jq '.jobs[] | select(.name == "deploy / docker-build-push") | .url')" >> "$GITHUB_OUTPUT"

      - name: Slack send message
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":package: *Build docker image:* ${{needs.docker-build-push.result}} ${{ steps.get_results.outputs.RESULT_EMOJI }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:* ${{github.repository}}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:* ${{github.ref_name}}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Image:* ${{inputs.APP_IMAGE_NAME_DOCKER_HUB}}:${{steps.package-version.outputs.current-version}}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Actor:* ${{github.actor}}"
                    }
                  ]   
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "url": "${{ steps.get_results.outputs.ACTION_URL }}",
                      "text": {
                        "type": "plain_text",
                        "text": "Action log"
                      }
                    },
                    {
                      "type": "button",
                      "url": "${{github.event.pull_request.html_url || github.event.head_commit.url}}",
                      "text": {
                        "type": "plain_text",
                        "text": "Commit"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: MM send message
        # You may pin to the exact commit or the version.
        # uses: mattermost/action-mattermost-notify@b7d118e440bf2749cd18a4a8c88e7092e696257a
        uses: mattermost/action-mattermost-notify@2.0.0
        with:
          # The Mattermost Incoming Webhook URL
          MATTERMOST_WEBHOOK_URL: https://chat.kaiten-dev.ru/hooks/9fe8t4m4c3fx9dzia9ix9kgz9a
          # The Mattermost channel to sent the message
          MATTERMOST_CHANNEL: deployment
          # The Mattermost username shown in the webhook
          MATTERMOST_USERNAME: github-actions
          # The Mattermost Icon URL for the webhook
          #MATTERMOST_ICON_URL: # optional
          # The text for the webhook message
          TEXT: |
            **Build docker image:** ${{needs.docker-build-push.result}} ${{ steps.get_results.outputs.RESULT_EMOJI }}
            \n
            **Image:** ${{inputs.APP_IMAGE_NAME_DOCKER_HUB}}:${{steps.package-version.outputs.current-version}}     **Actor:** ${{github.actor}}
            \n
            **Action log:** ${{ steps.get_results.outputs.ACTION_URL }}
            **Commit:** ${{github.event.pull_request.html_url || github.event.head_commit.url}}
          # The payload for the webhook
          #PAYLOAD: # optional
          # The payload file for the webhook
          #PAYLOAD_FILENAME: # optional, default is mattermost.json
              
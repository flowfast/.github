name: kubernetes-rescaling

on:
  workflow_call:
    inputs:
      ENV_FILE:
        required: true
        type: string
      KUBE_SCALE_SCRIPT:
        required: true
        type: string
      SHRINK_REPLIC_COUNTS:
        required: true
        type: boolean
      UPDATE_CONTAINERS_VERSIONS:
        required: true
        type: boolean
      REGISTRY_NAME:
        required: true
        type: string
      REGISTRY_NAMESPACE:
        required: true
        type: string
      REPOSITORIES:
        required: true
        type: string
      KEEL_URL:
        required: true
        type: string
      PATH_TO_UPDATER_VERSIONS_SCRIPT:
        required: true
        type: string
    secrets:
      KUBECONFIG:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      KEEL_USERNAME:
        required: true
      KEEL_PASSWORD:
        required: true

jobs:
  kubernetes-scale-deploymets:
    runs-on: ubuntu-latest
    timeout-minutes: 10
  
    steps:
    
      - name: Git clone repo
        uses: actions/checkout@v3

      - name: Set count of replics to 0
        if: inputs.SHRINK_REPLIC_COUNTS == true
        run: |
          sed -i 's/^\(KAITEN_[A-Z_]*COUNT=\)[0-9]*$/\10/g' ${{ inputs.ENV_FILE }}

      - name: Import environment variables from a file
        shell: bash
        run: cat ${{ inputs.ENV_FILE }} >> $GITHUB_ENV
        
      - name: "Configure kubeconfig"
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: "Setup client-keystone-auth plugin"
        run: |
          curl -sSL https://hub.mcs.mail.ru/repository/client-keystone-auth/latest/linux/client-install.sh | bash
          echo "$HOME/vk-cloud-solutions/bin" >> $GITHUB_PATH
          source ~/.bashrc

      - name: Kubectl rescale apps
        run: | 
          ${{ inputs.KUBE_SCALE_SCRIPT }}

      - name: Login to Docker registry
        if: inputs.UPDATE_CONTAINERS_VERSIONS == true
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.REGISTRY_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Update containers versions
        if: inputs.UPDATE_CONTAINERS_VERSIONS == true
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          KEEL_USERNAME: ${{ secrets.KEEL_USERNAME }}
          KEEL_PASSWORD: ${{ secrets.KEEL_PASSWORD }}
          REGISTRY_NAME: ${{ inputs.REGISTRY_NAME }}
          REGISTRY_NAMESPACE: ${{ inputs.REGISTRY_NAMESPACE }}
          REPOSITORIES: ${{ inputs.REPOSITORIES }}
          KEEL_URL: ${{ inputs.KEEL_URL }}
        run: ${{ inputs.PATH_TO_UPDATER_VERSIONS_SCRIPT }}
